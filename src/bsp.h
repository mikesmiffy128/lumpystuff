#pragma once

#include <stdint.h>

enum BSPConstants {
	// NOTE TODO FIXME: This assumes little endian!
	VBSPHEADER = ('P' << 24) + ('S' << 16) + ('B' << 8) + 'V',
	MINBSPVERSION = 19,
	BSPVERSION = 20,
	HEADER_LUMPS = 64
};

// This probably doesn't need to be here, but it might serve as useful documentation.
enum LumpType {
	LUMP_ENTITIES = 0,
	LUMP_PLANES = 1,
	LUMP_TEXDATA = 2,
	LUMP_VERTEXES = 3,
	LUMP_VISIBILITY = 4,
	LUMP_NODES = 5,
	LUMP_TEXINFO = 6,
	LUMP_FACES = 7,
	LUMP_LIGHTING = 8,
	LUMP_OCCLUSION = 9,
	LUMP_LEAFS = 10,
	LUMP_FACEIDS = 11,
	LUMP_EDGES = 12,
	LUMP_SURFEDGES = 13,
	LUMP_MODELS = 14,
	LUMP_WORLDLIGHTS = 15,
	LUMP_LEAFFACES = 16,
	LUMP_LEAFBRUSHES = 17,
	LUMP_BRUSHES = 18,
	LUMP_BRUSHSIDES = 19,
	LUMP_AREAS = 20,
	LUMP_AREAPORTALS = 21,
	LUMP_UNUSED0 = 22,
	LUMP_UNUSED1 = 23,
	LUMP_UNUSED2 = 24,
	LUMP_UNUSED3 = 25,
	LUMP_DISPINFO = 26,
	LUMP_ORIGINALFACES = 27,
	LUMP_PHYSDISP = 28,
	LUMP_PHYSCOLLIDE = 29,
	LUMP_VERTNORMALS = 30,
	LUMP_VERTNORMALINDICES = 31,
	LUMP_DISP_LIGHTMAP_ALPHAS = 32,
	LUMP_DISP_VERTS = 33,
	LUMP_DISP_LIGHTMAP_SAMPLE_POSITIONS = 34,
	LUMP_GAME_LUMP = 35,
	LUMP_LEAFWATERDATA = 36,
	LUMP_PRIMITIVES = 37,
	LUMP_PRIMVERTS = 38,
	LUMP_PRIMINDICES = 39,
	LUMP_PAKFILE = 40,
	LUMP_CLIPPORTALVERTS = 41,
	LUMP_CUBEMAPS = 42,
	LUMP_TEXDATA_STRING_DATA = 43,
	LUMP_TEXDATA_STRING_TABLE = 44,
	LUMP_OVERLAYS = 45,
	LUMP_LEAFMINDISTTOWATER = 46,
	LUMP_FACE_MACRO_TEXTURE_INFO = 47,
	LUMP_DISP_TRIS = 48,
	LUMP_PHYSCOLLIDESURFACE = 49,
	LUMP_WATEROVERLAYS = 50,
	LUMP_LEAF_AMBIENT_INDEX_HDR = 51,
	LUMP_LEAF_AMBIENT_INDEX = 52,
	LUMP_LIGHTING_HDR = 53,
	LUMP_WORLDLIGHTS_HDR = 54,
	LUMP_LEAF_AMBIENT_LIGHTING_HDR = 55,
	LUMP_LEAF_AMBIENT_LIGHTING = 56,
	LUMP_XZIPPAKFILE = 57,
	LUMP_FACES_HDR = 58,
	LUMP_MAP_FLAGS = 59,
	LUMP_OVERLAY_FADES = 60,
};

#pragma pack(push, 1)

struct Lump {
	int32_t fileofs;
	int32_t filelen;
	int32_t version;
	char fourCC[4];
};

struct BSPHeader {
	int32_t ident;
	int32_t version;
	struct Lump lumps[HEADER_LUMPS];
	int32_t mapRevision;
};

struct LMPHeader {
	int32_t lumpOffset;
	int32_t lumpID;
	int32_t lumpVersion;
	int32_t lumpLength;
	int32_t mapRevision;
};

#pragma pack(pop)
